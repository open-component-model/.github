# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

## Repository Settings we don't want to manage centrally
  # The name of the repository. Changing this will rename the repository
  #name: repo-name
  # A short description of the repository that will show up on GitHub
  #description: description of repo
  # Either `true` to make the repository private, or `false` to make it public.
  #private: false
  # Either `true` to enable downloads for this repository, `false` to disable them.
  #has_downloads: true

## Repository Information
  # A URL with more information about the repository
  homepage: https://ocm.software/
  # A comma-separated list of topics to set on the repository
  topics: ocm, open-component-model
  # Updates the default branch for this repository.
  default_branch: main

## Repository Features
  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true
  # Either `true` to enable projects for this repository, or `false` to disable them. If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true
  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

## Pull Request Merge Options
  # Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
  allow_squash_merge: true
  # The default value for a squash merge commit title: PR_TITLE, COMMIT_OR_PR_TITLE 
  squash_merge_commit_title: COMMIT_OR_PR_TITLE
  # The default value for a squash merge commit message: PR_BODY, COMMIT_MESSAGES, BLANK
  squash_merge_commit_message: PR_BODY
  # Either true to allow auto-merge on pull requests, or false to disallow auto-merge.
  allow_auto_merge: true
  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
  allow_merge_commit: false
  # Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
  allow_rebase_merge: false

## Security & Compliance
  # Either `true` to enable automated security fixes, or `false` to disable automated security fixes.
  enable_automated_security_fixes: true
  # Either `true` to enable vulnerability alerts, or `false` to disable vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
# cat labels.json | yq eval -P '.[] | [pick(["name", "color", "description"])]'
labels:
## The different areas of the project
- name: area/cicd
  color: 0052cc
  description: Continuous Integration and Continuous Deployment related
- name: area/community
  color: 0052cc
  description: Community related
- name: area/compliance
  color: 0052cc
  description: Compliance related
- name: area/documentation
  color: 0052cc
  description: Documentation related
- name: area/ipcei
  color: 0052cc
  description: Important Project of Common European Interest
- name: area/performance
  color: 0052cc
  description: Performance related (across all domains)
- name: area/quality
  color: 0052cc
  description: Output qualification (tests, checks, scans, automation in general, etc.) related
- name: area/security
  color: 0052cc
  description: Security relevant
- name: area/testing
  color: 0052cc
  description: Testing related
## The different components of the project
- name: component/ocm-cli
  color: 25399e
  description: OCM Command Line Interface
- name: component/ocm-controllers
  color: 25399e
  description: OCM Controllers
- name: component/ocm-spec
  color: 25399e
  description: Open Component Model Specification
- name: component/ocm-website
  color: 25399e
  description: https://ocm.software/
- name: component/vscode-extension
  color: 25399e
  description: MS Visual Studio Code OCM Extension
## The different kinds of issues and pull requests - will be used for release notes grouping
- name: kind/bug
  color: B60205
  description: Bug
- name: kind/fix
  color: c7def8
  description: Bug fix
- name: kind/feature
  color: c7def8
  description: new feature, enhancement, improvement, extension
- name: kind/epic
  color: c7def8
  description: Large multi-story topic
- name: kind/poc
  color: c7def8
  description: Proof of Concept or Prototype
- name: kind/chore
  color: c7def8
  description: chore, maintenance, etc.
- name: kind/dependency
  color: c7def8
  description: dependency update, etc.
- name: kind/documentation
  color: c7def8
  description: Documentation update, etc.
- name: kind/refactor
  color: c7def8
  description: refactoring, maintenance, etc.
- name: kind/skip-release-notes
  color: c7def8
  description: Pull request will not appear in release notes
## The different lifecycle stages of an issue or pull request for project management
- name: lifecycle/icebox
  color: e5fefc
  description: Temporarily on hold (will not age; may have dependencies, lack priority, miss feedback, etc.)
- name: lifecycle/rotten
  color: e5fefc
  description: Nobody worked on this for 12 months (final aging stage)
- name: lifecycle/stale
  color: e5fefc
  description: Nobody worked on this for 6 months (will further age)
- name: lifecycle/duplicate
  color: e5fefc
  description: Duplicate of another issue or PR
## The different states of an issue or pull request for easier collaboration
- name: dev/help
  color: fef2c0
  description: Needs help by someone else
- name: dev/blocked
  color: fef2c0
  description: Needs help by someone else
- name: dev/cant-reproduce
  color: fef2c0
  description: Cannot reproduce the issue
- name: dev/wont-fix
  color: fef2c0
  description: Will not fix the issue
## The different sizes of an issue or pull request
- name: size/xs
  color: bfdadc
  description: Extra small
- name: size/s
  color: bfdadc
  description: Small
- name: size/m
  color: bfdadc
  description: Medium
- name: size/l
  color: bfdadc
  description: Large
- name: size/xl
  color: bfdadc
  description: Extra large
## Breaking changes, which will require special attention or follow-up actions
- name: BREAKING CHANGE!!!
  color: B60205
  description: Breaking change in API or ocm-cli or spec
## PRs that should not be merged yet (although they are ready), because they are waiting for something else to be done first. If you are still working on the PR, put it in 'draft' mode instead or use project board status 'in pro'.
- name: do-not-merge
  color: B60205
  description: Do not merge this PR yet!

# Milestones: define milestones for Issues and Pull Requests
milestones:
- title: 2024-Q4
  #description: milestone-description
  # The state of the milestone. Either `open` or `closed`
  state: open

- title: 2025-Q1
  state: open

- title: 2025-Q2
  state: open

- title: 2025-Q3
  state: open

- title: 2025-Q4
  state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
teams:
- name: Maintainers
  # The permission to grant the team. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  permission: maintain
- name: Admins
  permission: admin

branches:
- name: main
  # https://docs.github.com/en/rest/reference/repos#update-branch-protection
  # Branch Protection settings. Set to null to disable
  protection:
    # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
    required_pull_request_reviews:
      # The number of approvals required. (1-6)
      required_approving_review_count: 1
      # Whether the most recent push must be approved by someone other than the person who pushed it. Default: false.
      require_last_push_approval: true
      # Dismiss approved reviews automatically when a new commit is pushed.
      dismiss_stale_reviews: true
      # Blocks merge until code owners have reviewed.
      require_code_owner_reviews: true
      # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
      dismissal_restrictions:
        #users: []
        teams:
        - Maintainers
    # Required. Require status checks to pass before merging. Set to null to disable
    required_status_checks:
      # Required. Require branches to be up to date before merging.
      strict: true
      # Required. The list of status checks to require in order to merge into this branch
      contexts: []
    # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
    enforce_admins: true
    # Prevent merge commits from being pushed to matching branches
    required_linear_history: true
    # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
    #restrictions:
    #apps: []
    #users: []
    #teams: []
